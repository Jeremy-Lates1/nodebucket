{"ast":null,"code":"import { Validators } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"ngx-cookie-service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"../sign-in.service\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/flex-layout/flex\";\nimport * as i7 from \"@angular/material/card\";\nimport * as i8 from \"@angular/material/button\";\nimport * as i9 from \"@angular/material/input\";\nimport * as i10 from \"@angular/material/form-field\";\nfunction SignInComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.errorMessage, \" \");\n  }\n}\nexport class SignInComponent {\n  constructor(router, cookieService, fb, signinService) {\n    this.router = router;\n    this.cookieService = cookieService;\n    this.fb = fb;\n    this.signinService = signinService;\n    this.errorMessage = \"\";\n    this.signinForm = this.fb.group({\n      employeeId: \"\"\n    });\n    //This is for test only\n    this.cookieService.delete(\"session_user\");\n    console.log(\"Session Id: \" + this.cookieService.get(\"session_user\"));\n  }\n  ngOnInit() {\n    this.signinForm = this.fb.group({\n      employeeId: [\"\", Validators.compose([Validators.required, Validators.pattern(\"^[0-9]*$\")])]\n    });\n  }\n  get form() {\n    return this.signinForm.controls;\n  }\n  onSubmit() {\n    const formValues = this.signinForm.value;\n    const employeeId = parseInt(formValues.employeeId);\n    console.log(\"Entered onSubmit function....\");\n    if (this.signinService.validate(employeeId)) {\n      console.log(\"Singin Serivce validation call on employee id passed....\");\n      this.cookieService.set(\"session_user\", employeeId.toString(), 1);\n      this.router.navigate([\"tasks\"]);\n    } else {\n      this.errorMessage = `The employee ID you entered is invalid, please try again.`;\n    }\n  }\n  static #_ = this.ɵfac = function SignInComponent_Factory(t) {\n    return new (t || SignInComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.CookieService), i0.ɵɵdirectiveInject(i3.FormBuilder), i0.ɵɵdirectiveInject(i4.SignInService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SignInComponent,\n    selectors: [[\"app-sign-in\"]],\n    decls: 18,\n    vars: 3,\n    consts: [[\"fxLayout\", \"column\"], [\"fxFlex\", \"\", 1, \"mat-elevation-z8\", \"signin-container\"], [\"class\", \"msg-error\", 4, \"ngIf\"], [\"fxLayout\", \"column\", \"fxLayoutGap\", \"10px\", 1, \"mat-elevation-z0\"], [3, \"formGroup\", \"ngSubmit\"], [\"fxFlex\", \"\", \"appearance\", \"fill\"], [\"for\", \"txtEmployeeId\", \"id\", \"lblId\"], [\"type\", \"text\", \"matInput\", \"\", \"formControlName\", \"employeeId\", \"required\", \"\", \"id\", \"txtEmployeeId\", \"name\", \"txtEmployeeId\"], [\"type\", \"submit\", \"fxFlex\", \"\", \"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"disabled\"], [1, \"msg-error\"]],\n    template: function SignInComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"mat-card\", 1)(2, \"mat-card-title\");\n        i0.ɵɵtext(3, \"Nodebucket Sign In\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"mat-card-subtitle\");\n        i0.ɵɵtext(5, \"You must enter a valid Employee Id to proceed.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"mat-card-content\");\n        i0.ɵɵtemplate(7, SignInComponent_div_7_Template, 2, 1, \"div\", 2);\n        i0.ɵɵelementStart(8, \"mat-card\", 3)(9, \"form\", 4);\n        i0.ɵɵlistener(\"ngSubmit\", function SignInComponent_Template_form_ngSubmit_9_listener() {\n          ctx.onSubmit();\n          return ctx.signinForm.reset();\n        });\n        i0.ɵɵelementStart(10, \"mat-card-content\")(11, \"mat-form-field\", 5)(12, \"mat-label\", 6);\n        i0.ɵɵtext(13, \"Employee ID\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(14, \"input\", 7);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(15, \"mat-card-actions\")(16, \"button\", 8);\n        i0.ɵɵtext(17, \" Submit \");\n        i0.ɵɵelementEnd()()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.signinForm);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"disabled\", !ctx.signinForm.valid);\n      }\n    },\n    dependencies: [i5.NgIf, i6.DefaultLayoutDirective, i6.DefaultLayoutGapDirective, i6.DefaultFlexDirective, i7.MatCard, i7.MatCardActions, i7.MatCardContent, i7.MatCardSubtitle, i7.MatCardTitle, i8.MatButton, i9.MatInput, i10.MatFormField, i10.MatLabel, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.FormGroupDirective, i3.FormControlName],\n    styles: [\".signin-container[_ngcontent-%COMP%] {\\n  width: 35%;\\n  margin: 15% auto;\\n}\\n\\n.signin-container[_ngcontent-%COMP%]    > mat-card-title[_ngcontent-%COMP%], mat-card-subtitle[_ngcontent-%COMP%] {\\n  text-align: center;\\n}\\n\\n.msg-error[_ngcontent-%COMP%] {\\n  margin: 10px 0px;\\n  padding: 12px;\\n  color: #d8000c;\\n  background-color: #ffd2d2;\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvc2lnbi1pbi9zaWduLWluLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxVQUFVO0VBQ1YsZ0JBQWdCO0FBQ2xCOztBQUVBOztFQUVFLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLGdCQUFnQjtFQUNoQixhQUFhO0VBQ2IsY0FBYztFQUNkLHlCQUF5QjtBQUMzQiIsInNvdXJjZXNDb250ZW50IjpbIi5zaWduaW4tY29udGFpbmVyIHtcbiAgd2lkdGg6IDM1JTtcbiAgbWFyZ2luOiAxNSUgYXV0bztcbn1cblxuLnNpZ25pbi1jb250YWluZXIgPiBtYXQtY2FyZC10aXRsZSxcbm1hdC1jYXJkLXN1YnRpdGxlIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4ubXNnLWVycm9yIHtcbiAgbWFyZ2luOiAxMHB4IDBweDtcbiAgcGFkZGluZzogMTJweDtcbiAgY29sb3I6ICNkODAwMGM7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmQyZDI7XG59XG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r0","errorMessage","SignInComponent","constructor","router","cookieService","fb","signinService","signinForm","group","employeeId","delete","console","log","get","ngOnInit","compose","required","pattern","form","controls","onSubmit","formValues","value","parseInt","validate","set","toString","navigate","_","ɵɵdirectiveInject","i1","Router","i2","CookieService","i3","FormBuilder","i4","SignInService","_2","selectors","decls","vars","consts","template","SignInComponent_Template","rf","ctx","ɵɵtemplate","SignInComponent_div_7_Template","ɵɵlistener","SignInComponent_Template_form_ngSubmit_9_listener","reset","ɵɵelement","ɵɵproperty","valid"],"sources":["/Users/jay/buwebdev/nodebucket/src/app/sign-in/sign-in.component.ts","/Users/jay/buwebdev/nodebucket/src/app/sign-in/sign-in.component.html"],"sourcesContent":["import { Component, OnInit } from \"@angular/core\";\nimport { SignInService } from \"../sign-in.service\";\nimport { Router } from \"@angular/router\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { CookieService } from \"ngx-cookie-service\";\n\n@Component({\n  selector: \"app-sign-in\",\n  templateUrl: \"./sign-in.component.html\",\n  styleUrls: [\"./sign-in.component.css\"],\n})\nexport class SignInComponent implements OnInit {\n  signinForm: FormGroup;\n  errorMessage: string;\n\n  constructor(\n    private router: Router,\n    private cookieService: CookieService,\n    private fb: FormBuilder,\n    private signinService: SignInService\n  ) {\n    this.errorMessage = \"\";\n    this.signinForm = this.fb.group({ employeeId: \"\" });\n\n    //This is for test only\n    this.cookieService.delete(\"session_user\");\n\n    console.log(\"Session Id: \" + this.cookieService.get(\"session_user\"));\n  }\n\n  ngOnInit(): void {\n    this.signinForm = this.fb.group({\n      employeeId: [\n        \"\",\n        Validators.compose([\n          Validators.required,\n          Validators.pattern(\"^[0-9]*$\"),\n        ]),\n      ],\n    });\n  }\n\n  get form() {\n    return this.signinForm.controls;\n  }\n\n  onSubmit() {\n    const formValues = this.signinForm.value;\n    const employeeId = parseInt(formValues.employeeId);\n\n    console.log(\"Entered onSubmit function....\");\n\n    if (this.signinService.validate(employeeId)) {\n      console.log(\"Singin Serivce validation call on employee id passed....\");\n      this.cookieService.set(\"session_user\", employeeId.toString(), 1);\n\n      this.router.navigate([\"tasks\"]);\n    } else {\n      this.errorMessage = `The employee ID you entered is invalid, please try again.`;\n    }\n  }\n}\n","<div fxLayout=\"column\">\n  <mat-card fxFlex class=\"mat-elevation-z8 signin-container\">\n    <mat-card-title>Nodebucket Sign In</mat-card-title>\n    <mat-card-subtitle\n      >You must enter a valid Employee Id to proceed.</mat-card-subtitle\n    >\n\n    <mat-card-content>\n      <div class=\"msg-error\" *ngIf=\"errorMessage\">\n        {{ errorMessage }}\n      </div>\n\n      <!--\n      <div *ngIf=\"form.employeeId.errors && form.employeeId.touched\">\n        <div class=\"msg-error\">Employee ID must be a numeric value.</div>\n      </div>\n      -->\n\n      <mat-card class=\"mat-elevation-z0\" fxLayout=\"column\" fxLayoutGap=\"10px\">\n        <form\n          [formGroup]=\"signinForm\"\n          (ngSubmit)=\"onSubmit(); signinForm.reset()\"\n        >\n          <!-- <form> -->\n          <mat-card-content>\n            <mat-form-field fxFlex appearance=\"fill\">\n              <mat-label for=\"txtEmployeeId\" id=\"lblId\">Employee ID</mat-label>\n\n              <input\n                type=\"text\"\n                matInput\n                formControlName=\"employeeId\"\n                required\n                id=\"txtEmployeeId\"\n                name=\"txtEmployeeId\"\n              />\n            </mat-form-field>\n          </mat-card-content>\n\n          <mat-card-actions>\n            <button\n              type=\"submit\"\n              [disabled]=\"!signinForm.valid\"\n              fxFlex\n              mat-raised-button\n              color=\"primary\"\n            >\n              Submit\n            </button>\n\n            <!--  <button type=\"submit\" fxFlex mat-raised-button color=\"primary\">\n              Submit\n            </button> -->\n          </mat-card-actions>\n        </form>\n      </mat-card>\n    </mat-card-content>\n  </mat-card>\n</div>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}