{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"ngx-cookie-service\";\nexport class SignInGuard {\n  constructor(router, cookieService) {\n    this.router = router;\n    this.cookieService = cookieService;\n  }\n  canActivate(next, state) {\n    let sessionUser = this.cookieService.get(\"session_user\");\n    //Test\n    sessionUser = \"\";\n    if (sessionUser) {\n      console.log(\"Session User True: \" + sessionUser);\n      return true;\n    } else {\n      console.log(\"Session User false: \" + sessionUser);\n      //this.router.navigate([\"/session/sign-in\"]);\n      this.router.navigate([\"signin\"]);\n      return false;\n    }\n  }\n  static #_ = this.ɵfac = function SignInGuard_Factory(t) {\n    return new (t || SignInGuard)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.CookieService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: SignInGuard,\n    factory: SignInGuard.ɵfac,\n    providedIn: \"root\"\n  });\n}","map":{"version":3,"names":["SignInGuard","constructor","router","cookieService","canActivate","next","state","sessionUser","get","console","log","navigate","_","i0","ɵɵinject","i1","Router","i2","CookieService","_2","factory","ɵfac","providedIn"],"sources":["/Users/jay/buwebdev/nodebucket/src/app/sign-in.guard.ts"],"sourcesContent":["import { CanActivateFn, CanActivate, Router } from \"@angular/router\";\nimport { inject } from \"@angular/core\";\nimport {\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree,\n} from \"@angular/router\";\nimport { CookieService } from \"ngx-cookie-service\";\nimport { Injectable } from \"@angular/core\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class SignInGuard implements CanActivate {\n  constructor(private router: Router, private cookieService: CookieService) {}\n\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    let sessionUser = this.cookieService.get(\"session_user\");\n\n    //Test\n    sessionUser = \"\";\n\n    if (sessionUser) {\n      console.log(\"Session User True: \" + sessionUser);\n\n      return true;\n    } else {\n      console.log(\"Session User false: \" + sessionUser);\n      //this.router.navigate([\"/session/sign-in\"]);\n      this.router.navigate([\"signin\"]);\n      return false;\n    }\n  }\n}\n"],"mappings":";;;AAaA,OAAM,MAAOA,WAAW;EACtBC,YAAoBC,MAAc,EAAUC,aAA4B;IAApD,KAAAD,MAAM,GAANA,MAAM;IAAkB,KAAAC,aAAa,GAAbA,aAAa;EAAkB;EAE3EC,WAAWA,CAACC,IAA4B,EAAEC,KAA0B;IAClE,IAAIC,WAAW,GAAG,IAAI,CAACJ,aAAa,CAACK,GAAG,CAAC,cAAc,CAAC;IAExD;IACAD,WAAW,GAAG,EAAE;IAEhB,IAAIA,WAAW,EAAE;MACfE,OAAO,CAACC,GAAG,CAAC,qBAAqB,GAAGH,WAAW,CAAC;MAEhD,OAAO,IAAI;KACZ,MAAM;MACLE,OAAO,CAACC,GAAG,CAAC,sBAAsB,GAAGH,WAAW,CAAC;MACjD;MACA,IAAI,CAACL,MAAM,CAACS,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;MAChC,OAAO,KAAK;;EAEhB;EAAC,QAAAC,CAAA,G;qBAnBUZ,WAAW,EAAAa,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,MAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,aAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXnB,WAAW;IAAAoB,OAAA,EAAXpB,WAAW,CAAAqB,IAAA;IAAAC,UAAA,EAFV;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}