{"ast":null,"code":"import { Router } from \"@angular/router\";\nimport { inject } from \"@angular/core\";\nimport { CookieService } from \"ngx-cookie-service\";\nexport const signInGuard = (route, state) => {\n  const cookie = inject(CookieService); // Inject the cookie service from the ngx-cookie-service package\n  /**\n   * if the user is logged in, allow the route to load\n   */\n  if (cookie.get(\"session_user\")) {\n    console.log(\"singin gaurd here....\");\n    return true; // Allow the route to load\n  } else {\n    const router = inject(Router); // Inject the router service from the @angular/router package\n    router.navigate([\"signin\"]); // Redirect to login page\n    return false; // Prevent the route from loading\n  }\n};","map":{"version":3,"names":["Router","inject","CookieService","signInGuard","route","state","cookie","get","console","log","router","navigate"],"sources":["/Users/jay/buwebdev/nodebucket/src/app/sign-in.guard.ts"],"sourcesContent":["import { CanActivateFn, Router } from \"@angular/router\";\nimport { inject } from \"@angular/core\";\nimport { CookieService } from \"ngx-cookie-service\";\n\nexport const signInGuard: CanActivateFn = (route, state) => {\n  const cookie = inject(CookieService); // Inject the cookie service from the ngx-cookie-service package\n\n  /**\n   * if the user is logged in, allow the route to load\n   */\n  if (cookie.get(\"session_user\")) {\n    console.log(\"singin gaurd here....\");\n    return true; // Allow the route to load\n  } else {\n    const router = inject(Router); // Inject the router service from the @angular/router package\n    router.navigate([\"signin\"]); // Redirect to login page\n    return false; // Prevent the route from loading\n  }\n};\n"],"mappings":"AAAA,SAAwBA,MAAM,QAAQ,iBAAiB;AACvD,SAASC,MAAM,QAAQ,eAAe;AACtC,SAASC,aAAa,QAAQ,oBAAoB;AAElD,OAAO,MAAMC,WAAW,GAAkBA,CAACC,KAAK,EAAEC,KAAK,KAAI;EACzD,MAAMC,MAAM,GAAGL,MAAM,CAACC,aAAa,CAAC,CAAC,CAAC;EAEtC;;;EAGA,IAAII,MAAM,CAACC,GAAG,CAAC,cAAc,CAAC,EAAE;IAC9BC,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;IACpC,OAAO,IAAI,CAAC,CAAC;GACd,MAAM;IACL,MAAMC,MAAM,GAAGT,MAAM,CAACD,MAAM,CAAC,CAAC,CAAC;IAC/BU,MAAM,CAACC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;IAC7B,OAAO,KAAK,CAAC,CAAC;;AAElB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}